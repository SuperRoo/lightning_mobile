/*
 * File: app/controller/Login.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Mob2.controller.Login', {
    extend: 'Ext.app.Controller',
    alias: 'controller.Login',

    config: {
        refs: {
            frmLogin: '#formLogin',
            cmdLogin: {
                selector: '#formLogin #cmdLogin1',
                xtype: 'button'
            },
            cmdLogOff: {
                selector: '#formLogin #cmdlogoff',
                xtype: 'button'
            }
        },

        control: {
            "button#cmdLogin": {
                tap: 'onCmdLoginTap'
            }
        }
    },

    onCmdLoginTap: function(button, e, eOpts) {
        var me = this;
        if(Mob2.isOnline){  
            Ext.Viewport.setMasked({ message: 'Loading...' });
            var vals = me.getFrmLogin().getValues();
            if (vals.username === '' ){
                Ext.Msg.alert('Lightning','there is no username<br/>cannot continue');
                Ext.Viewport.setMasked(false);
            }else if(vals.password === ''){
                Ext.Msg.alert('Lightning','there is no password<br/>cannot continue');
                Ext.Viewport.setMasked(false);
            }else{
                Ext.data.JsonP.request({    
                    url: Mob2.apiURL + 'login',
                    params:{
                        username: vals.username,
                        password: vals.password

                    },
                    success: function(result){  
                        if(result.status != 'success'){
                            Mob2.userID = null;
                            Ext.Msg.alert('Login Failure',result.message);
                            //erase cookie
                            me.saveCookie('');
                        }else{
                            me.saveCookie(result.userid);
                            Mob2.userID = result.userid;
                            if(!me.getFrmLogin()){
                                Ext.create('Mob2.view.formLogin');
                                console.log('creating login form');
                            }
                            Ext.Viewport.remove(me.getFrmLogin(),true);
                            me.getApplication().getController('ctlCommon').startApp();
                        }
                        Ext.Viewport.setMasked(false);
                    },
                    failure: function(result){               
                        Ext.Viewport.setMasked(false);
                        if (!result.status ) {                
                            Ext.Msg.alert('Lightning','there has been a failure trying to connect to the internet<br/>please try again later');
                        }else{
                            Ext.Msg.alert('Login Failure',"Failed: " + result.status + ' ' + result.message);
                        }
                        me.saveCookie('');
                        Mob2.app.getApplication().getController('ctlCommon').setCookie('LightningSD','',-1);
                    }
                });
            }
        }else{
            Mob2.app.getApplication().getController('ctlCommon').internetError();
        }

    },

    getCookie: function() {
        var me = this;
        var cookie = window.localStorage.getItem("cookie");
        if (!cookie ){
            return null;
        }else{  
            var cookieDate = new Date(window.localStorage.getItem("cookieDate"));
            var dteExpire = new Date();
            dteExpire.setFullYear(cookieDate.getFullYear(),cookieDate.getMonth() + 1,cookieDate.getDay()+7);
            if(dteExpire <= cookieDate){
                window.localStorage.removeItem("cookie");
                return null;
            }else{
                return cookie;
            }
        }


    },

    saveCookie: function(cookie) {
        var me = this;
        if(cookie === ''){
            window.localStorage.removeItem("cookie");

        }else{
            var dte = new Date();
            window.localStorage.setItem("cookie", cookie);
            window.localStorage.setItem("cookieDate", dte);
        }
    }

});