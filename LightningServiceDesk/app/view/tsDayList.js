/*
 * File: app/view/tsDayList.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Mob2.view.tsDayList', {
    extend: 'Ext.Container',

    config: {
        itemId: 'tsDayList',
        ui: '',
        layout: {
            type: 'vbox'
        },
        scrollable: false,
        items: [
            {
                xtype: 'container',
                flex: 1,
                html: '',
                itemId: 'lstTitle',
                layout: {
                    type: 'hbox'
                }
            },
            {
                xtype: 'container',
                flex: 10,
                itemId: 'lstContainer',
                ui: '',
                layout: {
                    type: 'fit'
                },
                scrollable: false,
                items: [
                    {
                        xtype: 'list',
                        flex: '10',
                        itemId: 'lstTSDay',
                        emptyText: 'no times recorded',
                        itemTpl: [
                            '<div>{timeIn} - {timeOut} <span style="float:right">{difference}</span></div>'
                        ],
                        store: 'TSBlockLocal'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                itemId: 'tsToolBar',
                layout: {
                    pack: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        itemId: 'cmdBlockAdd',
                        ui: 'round',
                        text: 'add'
                    },
                    {
                        xtype: 'button',
                        itemId: 'cmdBlockCommit',
                        ui: 'round',
                        text: 'commit'
                    },
                    {
                        xtype: 'button',
                        itemId: 'cmdBlockSave',
                        ui: 'round',
                        text: 'save'
                    }
                ]
            },
            {
                xtype: 'hiddenfield',
                itemId: 'dayID'
            },
            {
                xtype: 'hiddenfield',
                itemId: 'startDate'
            }
        ]
    },

    initialize: function() {
        var me = this;
        me.element.on('swipe', 'onSwipe', me);
        me.element.on('dragstart', 'onDragStart', me);
        me.element.on('dragend', 'onDragEnd', me);
        me.callParent();

    },

    onSwipe: function(event) {
        //event.target.style.opacity = 1;
        Ext.Viewport.setMasked(false);
        this.fireEvent('swipe',this, event.direction);
    },

    onDragStart: function() {
        ;Ext.Viewport.setMasked(true)
    },

    onDragEnd: function() {
        Ext.Viewport.setMasked(false);
    }

});